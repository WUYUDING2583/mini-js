//1.整数
const reg1 = /^0$ | ^-{0,1}[1-9][0-9]{0,}$/;
// 2.整数后有点 2.
const reg2 = /^0\.$ | ^-{0,1}[1-9][0-9]{0,}\.$/;
// 3.小数
const reg3 = /^0\.[0-9]{1,}$ | ^-{0,1}[1-9][0-9]{0,}\.[0-9]{1,}$/;
// 4.小数 无整位 .12
const reg4 = /^-{0,1}\.[0-9]{1,}$/;

// 1+2
const reg12 = /^(0|-{0,1}[1-9][0-9]{0,})\.{0,1}$/;
// 2+3
const reg23 = /^(0|-{0,1}[1-9][0-9]{0,})\.[0-9]{0,}$/;
// 1+2+3
const reg123 = /^(0|-{0,1}[1-9][0-9]{0,})(\.[0-9]{0,}){0,1}$/;
// 1+2+3+4
const reg1234 =
  /^(0|-{0,1}[1-9][0-9]{0,})(\.[0-9]{0,}){0,1}$|^-{0,1}\.[0-9]{1,}$/;
//=======================================================================
const ranReg = /a([a-z])(c)/g;
// console.log("abc".match(ranReg));

let string1 = "abcadc";
let i = 1;
// console.log(
//   string1.replace(ranReg, (str, $1, $2) => {
//     console.log(str, $1, $2);
//     return $1 + i++;
//   })
// );

const ranReg1 = /\d/g;
let string2 = "1234567";
let r;
while ((r = ranReg1.exec(string2))) {
  console.log(r);
}
//=======================================================================
